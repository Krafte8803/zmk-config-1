/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/*
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ ^ │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ ß │ ´ │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ Q │ W │ E │ R │ T │ Z │ U │ I │ O │ P │ Ü │ + │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │ A │ S │ D │ F │ G │ H │ J │ K │ L │ Ö │ Ä │ # │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ < │ Y │ X │ C │ V │ B │ N │ M │ , │ . │ - │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_CIRC GRAVE // ^ (dead)
#define DE_SS   MINUS // ß
#define DE_ACUT EQUAL // ´ (dead)

// Row 2
#define DE_Q    Q            // Q
#define DE_W    W            // W
#define DE_E    E            // E
#define DE_R    R            // R
#define DE_T    T            // T
#define DE_Z    Y            // Z
#define DE_U    U            // U
#define DE_I    I            // I
#define DE_O    O            // O
#define DE_P    P            // P
#define DE_UDIA LEFT_BRACKET // Ü
#define DE_PLUS RIGHT_BRACKET // +

// Row 3
#define DE_A    A            // A
#define DE_S    S            // S
#define DE_D    D            // D
#define DE_F    F            // F
#define DE_G    G            // G
#define DE_H    H            // H
#define DE_J    J            // J
#define DE_K    K            // K
#define DE_L    L            // L
#define DE_ODIA SEMICOLON    // Ö
#define DE_ADIA SINGLE_QUOTE // Ä
#define DE_HASH NON_US_HASH  // #

// Row 4
#define DE_LABK NON_US_BACKSLASH // <
#define DE_Y    Z                // Y
#define DE_X    X                // X
#define DE_C    C                // C
#define DE_V    V                // V
#define DE_B    B                // B
#define DE_N    N                // N
#define DE_M    M                // M
#define DE_COMM COMMA            // ,
#define DE_DOT  PERIOD           // .
#define DE_MINS SLASH            // -

/* Shifted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ ° │ ! │ " │ § │ $ │ % │ & │ / │ ( │ ) │ = │ ? │ ` │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │   │   │   │   │   │   │   │   │   │   │   │ * │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │   │   │   │   │   │   │   │   │   │   │   │ ' │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ > │   │   │   │   │   │   │   │ ; │ : │ _ │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_DEG  LS(DE_CIRC) // °
#define DE_EXLM LS(NUMBER_1)    // !
#define DE_DQUO LS(NUMBER_2)    // "
#define DE_SECT LS(NUMBER_3)    // §
#define DE_DLR  LS(NUMBER_4)    // $
#define DE_PERC LS(NUMBER_5)    // %
#define DE_AMPR LS(NUMBER_6)    // &
#define DE_SLSH LS(NUMBER_7)    // /
#define DE_LPRN LS(NUMBER_8)    // (
#define DE_RPRN LS(NUMBER_9)    // )
#define DE_EQL  LS(NUMBER_0)    // =
#define DE_QUES LS(DE_SS)   // ?
#define DE_GRV  LS(DE_ACUT) // ` (dead)
// Row 2
#define DE_ASTR LS(DE_PLUS) // *
// Row 3
#define DE_QUOT LS(DE_HASH) // '
// Row 4
#define DE_RABK LS(DE_LABK) // >
#define DE_SCLN LS(DE_COMM) // ;
#define DE_COLN LS(DE_DOT)  // :
#define DE_UNDS LS(DE_MINS) // _

/* Alted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │ „ │ ¡ │ “ │ ¶ │ ¢ │ [ │ ] │ | │ { │ } │ ≠ │ ¿ │   │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ « │ ∑ │ € │ ® │ † │ Ω │ ¨ │ ⁄ │ Ø │ π │ • │ ± │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │ Å │ ‚ │ ∂ │ ƒ │ © │ ª │ º │ ∆ │ @ │ Œ │ Æ │ ‘ │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ ≤ │ ¥ │ ≈ │ Ç │ √ │ ∫ │ ~ │ µ │ ∞ │ … │ – │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_LBRC LA(NUMBER_5)    // [
#define DE_RBRC LA(NUMBER_6)    // ]
#define DE_PIPE LA(NUMBER_7)    // |
#define DE_LCBR LA(NUMBER_8)    // {
#define DE_RCBR LA(NUMBER_9)    // }
#define DE_AT LA(DE_L)    // @
#define DE_EURO LA(DE_E)    // €
#define DE_TILD LA(DE_N)    // ~

/* Shift+Alted symbols
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
 * │   │ ¬ │ ” │   │ £ │ ﬁ │   │ \ │ ˜ │ · │ ¯ │ ˙ │ ˚ │     │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
 * │     │ » │   │ ‰ │ ¸ │ ˝ │ ˇ │ Á │ Û │   │ ∏ │   │  │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
 * │      │   │ Í │ ™ │ Ï │ Ì │ Ó │ ı │   │ ﬂ │   │   │   │  │
 * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
 * │    │ ≥ │ ‡ │ Ù │   │ ◊ │ ‹ │ › │ ˘ │ ˛ │ ÷ │ — │        │
 * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
 * │     │    │     │                       │     │    │     │
 * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
 */
// Row 1
#define DE_BSLS LS(LA(NUMBER_7))    // (backslash)


// Other definitions
#define _____ &none
#define t____ &trans

// Layers
#define ALPHA	0
#define NAV		1
#define NUM		2
#define FUN		3
#define SYM_R	4
#define SYM_L	5

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        slh: sticky_layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKY_LAYER_HOLD";
            #binding-cells = <2>;
            tapping-term-ms = <130>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&sk>;
        };
		mm_unds: mod_morph_underscore {
			compatible = "zmk,behavior-mod-morph";
			label = "MM_UNDERSCORE";
			#binding-cells = <0>;
			bindings = <&kp SPACE>, <&kp DE_UNDS>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		mm_quot: mod_morph_quote {
			compatible = "zmk,behavior-mod-morph";
			label = "MM_QUOTE";
			#binding-cells = <0>;
			bindings = <&kp DE_DOT>, <&kp DE_QUOT>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
    };

	keymap {
		compatible = "zmk,keymap";

		alpha_layer {
            bindings = <
            &kp C_AC_CUT	&kp DE_V		&kp DE_W		&kp DE_M		&kp DE_G		&kp DE_J																		&kp DE_ODIA		&kp DE_UDIA		&kp DE_ADIA		&kp DE_Q		&kp DE_SS		&kp LC(A)
            &kp C_AC_COPY	&hm LGUI DE_S	&hm LALT DE_N	&hm LSHFT DE_R	&hm LCTRL DE_T	&kp DE_C																		&hm RCTRL DE_Y	&hm RSHFT DE_I	&hm RALT DE_E	&hm RGUI DE_A	&kp DE_H		&kp C_AC_UNDO
            &kp C_AC_PASTE	&kp DE_F		&kp DE_B		&kp DE_L		&kp DE_D		&kp DE_P		_____				&kp ESC			_____		_____			&kp DE_X		&kp DE_U		&kp DE_O		&kp DE_Z		&kp DE_K		&kp C_AC_REDO
            												&kp C_PP		_____			&kp TAB			&lt NAV SPACE		&lt SYM_R RET	&mo SYM_L	&slh NUM LSHFT	&lt FUN BSPC	&kp DE_DOT		&kp K_MUTE
            >;

			sensor-bindings = <&inc_dec_kp C_NEXT C_PREV &inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		nav_layer {
            bindings = <
            t____	_____		_____		_____		_____		_____																_____		_____		_____		_____		_____		t____
            t____	&kp LGUI	&kp LALT	&kp LSHFT	&kp LCTRL	_____																_____		&kp LEFT	&kp DOWN	&kp UP		&kp RIGHT	t____
            t____	_____		_____		_____		_____		_____		t____			t____			t____		t____		_____		&kp HOME	&kp PG_DN	&kp PG_UP	&kp END		t____
            								t____		t____		t____		t____			t____			t____		t____		&kp DEL		t____		t____
            >;

			sensor-bindings = <&inc_dec_kp t____ t____ &inc_dec_kp t____ t____>;
		};

		num_layer {
            bindings = <
            t____	_____		&kp N7		&kp N8		&kp N9		_____																_____		_____		_____		_____		_____		t____
            t____	&kp DE_MINS	&kp N4		&kp N5		&kp N6		_____																_____		&kp RCTRL	&kp RSHFT	&kp RALT	&kp RGUI	t____
            t____	&kp DE_PLUS	&kp N1		&kp N2		&kp N3		&kp N0		t____			t____			t____		t____		_____		_____		_____		_____		_____		t____
            								t____		t____		t____		t____			t____			t____		t____		t____		t____		t____
            >;

			sensor-bindings = <&inc_dec_kp t____ t____ &inc_dec_kp t____ t____>;
		};

		fun_layer {
            bindings = <
            t____	&kp F12		&kp F7		&kp F8		&kp F9		_____																_____		_____		_____		_____		_____		t____
            t____	&kp F11		&kp F4		&kp F5		&kp F6		_____																_____		&kp RCTRL	&kp RSHFT	&kp RALT	&kp RGUI	t____
            t____	&kp F10		&kp F1		&kp F2		&kp F3		_____		t____			t____			t____		t____		_____		_____		_____		_____		_____		t____
            								t____		t____		t____		t____			t____			t____		t____		t____		t____		t____
            >;

			sensor-bindings = <&inc_dec_kp t____ t____ &inc_dec_kp t____ t____>;
		};

		sym_r_layer {
            bindings = <
            t____	_____		_____		_____		_____		_____																&kp DE_CIRC	&kp DE_LBRC	&kp DE_RBRC	&kp DE_DLR	&kp DE_EURO	t____
            t____	&kp LGUI	&kp LALT	&kp LSHFT	&kp LCTRL	_____																&kp DE_PERC	&kp DE_LPRN	&kp DE_RPRN	&kp DE_COLN	&kp DE_SCLN	t____
            t____	_____		_____		_____		_____		_____		t____			t____			t____		t____		&kp DE_AT	&kp DE_LCBR	&kp DE_RCBR	&kp DE_EXLM	&kp DE_AMPR	t____
            								t____		t____		t____		t____			t____			t____		t____		t____		t____		t____
            >;

			sensor-bindings = <&inc_dec_kp t____ t____ &inc_dec_kp t____ t____>;
		};

		sym_l_layer {
            bindings = <
            t____	_____		&kp DE_PIPE	&kp DE_EQL	&kp DE_HASH	&kp DE_TILD															_____		_____		_____		_____		_____		t____
            t____	&kp DE_LABK &kp DE_RABK	&kp DE_ASTR	&kp DE_SLSH	&kp DE_BSLS															_____		&kp RCTRL	&kp RSHFT	&kp RALT	&kp RGUI	t____
            t____	&kp DE_ACUT	&kp DE_GRV	&kp DE_QUOT	&kp DE_DQUO	&kp DE_DEG	t____			t____			t____		t____		_____		_____		_____		_____		_____		t____
            								t____		t____		t____		t____			t____			t____		t____		t____		t____		t____
            >;

			sensor-bindings = <&inc_dec_kp t____ t____ &inc_dec_kp t____ t____>;
		};
	};
};
